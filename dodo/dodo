#!/usr/bin/python3
"""Entrypoint for dodo"""

import argparse

from dodo.color_printer import ColorPrinter
from dodo.dodo_runner import Dodo


def print_results(test_results):
    """Prints a result in nice formatted manner"""
    print("RESULTS")
    print("=" * 50)

    # Print results
    for func_name, result in test_results.items():
        if result:
            ColorPrinter.print_green(
                "{0} - {1}".format(func_name, Dodo.RESULT_CONSTANTS[result]))
        else:
            ColorPrinter.print_red(
                "{0} - {1}".format(func_name, Dodo.RESULT_CONSTANTS[result]))


def main(testdirectory, file_format, output_file=None):
    """Main function
       It's a wrapper function over Dodo class which actually executes tests
       and returns results.
    """
    dodo = Dodo(testdirectory)
    dodo.execute_tests()
    test_results = dodo.get_result()
    print_results(test_results)


if __name__ == "__main__":
    try:
        parser = argparse.ArgumentParser(
            description="Dodo - The Python functional test runner")
        parser.add_argument(
            "testdirectory",
            help="Path to the python package containing tests",
            type=str)
        parser.add_argument(
            "-f", "--file", help="Path to the output file", type=str)
        parser.add_argument(
            "-o", "--format", help="Output file format",
            type=str, choices=["json", "xml"], default="json")
        arguments = parser.parse_args()
        main(arguments.testdirectory, arguments.format, arguments.file)
    except Exception as exception:
        print(exception)
